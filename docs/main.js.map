{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.html","./src/app/todo-tasks/todo-tasks.component.ts","./src/app/todo-tasks/todo-tasks.component.html","./src/app/shared/components/custom-input/custom-input.component.ts","./src/app/shared/components/custom-input/custom-input.component.html","./src/app/shared/services/local-storage.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { TodoTasksComponent } from './todo-tasks/todo-tasks.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n\n})\nexport class AppComponent {\n  title = 'angular-todo-list';\n  todoTasks = TodoTasksComponent;\n}\n","<div class=\"content\" role=\"main\">\n  <app-todo-tasks></app-todo-tasks>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { CustomInputComponent } from './shared/components/custom-input/custom-input.component';\nimport { ConfirmDialogComponent } from './shared/confirm-dialog/confirm-dialog.component';\nimport { TodoTasksComponent } from './todo-tasks/todo-tasks.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoTasksComponent,\n    ConfirmDialogComponent,\n    CustomInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatListModule,\n    MatSelectModule,\n  ],\n  providers: [{ provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n}\r\n","<div class=\"confirm-dialog\">\r\n  <mat-icon class=\"warning-icon warning-color\">warning</mat-icon>\r\n  <h2 mat-dialog-title>Confirm Deletion</h2>\r\n  <mat-dialog-content>\r\n    <p>Are you certain you wish to delete this task? This action cannot be undone.</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions align=\"end\">\r\n    <div class=\"modal-dialog_actions\">\r\n      <button mat-button mat-dialog-close>Cancel</button>\r\n      <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\">\r\n        Delete\r\n      </button>\r\n    </div>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ConfirmDialogComponent } from '../shared/confirm-dialog/confirm-dialog.component';\nimport { LocalStorageService } from '../shared/services/local-storage.service';\nimport { Task } from './task.model';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-todo-tasks',\n  templateUrl: './todo-tasks.component.html',\n  styleUrls: ['./todo-tasks.component.scss']\n})\nexport class TodoTasksComponent implements OnInit {\n  private readonly STORAGE_KEY = 'tasks';\n\n  constructor(\n    private storageService: LocalStorageService,\n    private dialog: MatDialog\n  ) {\n    this.addTaskSubject.pipe(\n      filter((taskValue): taskValue is string =>\n        !!taskValue && taskValue.trim().length > 0\n      ),\n      map(taskValue => ({\n        id: this.tasks.length + 1,\n        title: taskValue.trim(),\n        description: '',\n        completed: false\n      }))\n    ).subscribe(newTask => {\n      this.tasks.push(newTask);\n      this.tasksSubject.next(this.tasks);\n      this.storageService.setItems(this.STORAGE_KEY, this.tasks);\n      this.taskFormControl.reset();\n    });\n  }\n\n  tasks: Task[] = [];\n  filteredTasks: Task[] = [];\n\n  taskFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3)\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  filterOptions = [\n    { value: 'all', label: 'All' },\n    { value: 'completed', label: 'Completed' },\n    { value: 'incomplete', label: 'Incomplete' }\n  ];\n\n  private tasksSubject = new BehaviorSubject<Task[]>([]);\n  private filterSubject = new BehaviorSubject<string>('all');\n  private searchSubject = new BehaviorSubject<string>('');\n  private addTaskSubject = new BehaviorSubject<string | null>(null);\n\n  ngOnInit(): void {\n    this.tasks = this.storageService.getItems<Task>(this.STORAGE_KEY);\n    this.tasksSubject.next(this.tasks);\n    this.setupTasksFilter();\n  }\n\n  private setupTasksFilter(): void {\n    combineLatest([\n      this.tasksSubject,\n      this.filterSubject,\n      this.searchSubject\n    ]).pipe(\n      map(([tasks, filter, search]) => {\n        let filtered = tasks;\n\n        // Apply status filter\n        if (filter === 'completed') {\n          filtered = filtered.filter(task => task.completed);\n        } else if (filter === 'incomplete') {\n          filtered = filtered.filter(task => !task.completed);\n        }\n\n        // Apply search filter\n        if (search) {\n          filtered = filtered.filter(task =>\n            task.title.toLowerCase().includes(search.toLowerCase())\n          );\n        }\n\n        return filtered;\n      })\n    ).subscribe(filteredTasks => {\n      this.filteredTasks = filteredTasks;\n    });\n  }\n\n  onFilterChange(filter: string): void {\n    this.filterSubject.next(filter);\n  }\n\n  addTask(): void {\n    if (this.taskFormControl.valid) {\n      this.addTaskSubject.next(this.taskFormControl.value);\n      this.taskFormControl.reset();\n    } else {\n      this.taskFormControl.markAsTouched();\n    }\n  }\n\n  subscribeToTasksControl(): void {\n    this.taskFormControl.valueChanges.subscribe(value => {\n      this.searchSubject.next(value || '');\n    });\n  }\n\n  deleteTask(taskId: number): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '400px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.tasks = this.tasks.filter(task => task.id !== taskId);\n        this.tasksSubject.next(this.tasks);\n        this.storageService.setItems(this.STORAGE_KEY, this.tasks);\n      }\n    });\n  }\n\n  toggleTaskStatus(task: Task): void {\n    task.completed = !task.completed;\n    this.tasksSubject.next([...this.tasks]);\n    this.storageService.setItems(this.STORAGE_KEY, this.tasks);\n  }\n}\n","<div class=\"container\">\n  <mat-card class=\"todo-card\">\n    <mat-card-header class=\"todo-card-title\">\n      <mat-card-title>\n        <h1>Todo Tasks</h1>\n      </mat-card-title>\n    </mat-card-header>\n\n    <!-- <div class=\"todo-subcard_light\"> -->\n    <mat-card-content class=\"todo-card-content\">\n      <form class=\"todo-card-content_form\" (ngSubmit)=\"addTask()\">\n        <app-custom-input class=\"app-custom-input\" [control]=\"taskFormControl\" [matcher]=\"matcher\" label=\"Task\"\n          placeholder=\"Add a new task\" [minLength]=\"3\" required>\n        </app-custom-input>\n        <button mat-raised-button class=\"btn-submit\" color=\"primary\" type=\"submit\" [disabled]=\"taskFormControl.invalid\"\n          submitButton>\n          <div class=\"btn-submit_icon-primary\">\n            <mat-icon>add</mat-icon>\n            Add Task\n          </div>\n        </button>\n      </form>\n\n      <div class=\"filter-container\">\n        <mat-form-field>\n          <mat-label>Filter tasks</mat-label>\n          <mat-select (selectionChange)=\"onFilterChange($event.value)\" value=\"all\">\n            <mat-option *ngFor=\"let option of filterOptions\" [value]=\"option.value\">\n              {{option.label}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <mat-list class=\"task-list\">\n        <span *ngIf=\"filteredTasks.length === 0\">No tasks found</span>\n        <mat-list-item class=\"mat-list-item_content\" *ngFor=\"let task of filteredTasks\" class=\"task-item\"\n          [class.completed]=\"task.completed\">\n          <div class=\"task-item_content\">\n            <mat-checkbox class=\"task-item_checkbox\" [checked]=\"task.completed\" (change)=\"toggleTaskStatus(task)\">\n            </mat-checkbox>\n            <span class=\"task-title\" [class.completed-text]=\"task.completed\">\n              {{task.title}}\n            </span>\n          </div>\n          <button mat-icon-button color=\"warn\" (click)=\"deleteTask(task.id)\" class=\"delete-button\">\n            <mat-icon>delete</mat-icon>\n          </button>\n\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n    <!-- </div> -->\n  </mat-card>\n</div>\n","import { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-custom-input',\r\n  templateUrl: './custom-input.component.html',\r\n  styleUrls: ['./custom-input.component.scss']\r\n})\r\nexport class CustomInputComponent {\r\n  @Input() control: FormControl = new FormControl();\r\n  @Input() label: string = '';\r\n  @Input() placeholder: string = '';\r\n  @Input() matcher: ErrorStateMatcher | null = null;\r\n  @Input() minLength: number | null = null;\r\n  @Input() maxLength: number | null = null;\r\n}\r\n","<div class=\"input-form\">\r\n  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [formControl]=\"control\" [errorStateMatcher]=\"matcher\" [placeholder]=\"placeholder\">\r\n    <mat-error *ngIf=\"control.hasError('required')\">\r\n      {{ label }} is required\r\n    </mat-error>\r\n    <mat-error *ngIf=\"control.hasError('minlength')\">\r\n      {{ label }} must be at least {{ minLength }} characters long\r\n    </mat-error>\r\n    <mat-error *ngIf=\"control.hasError('maxlength')\">\r\n      {{ label }} cannot exceed {{ maxLength }} characters\r\n    </mat-error>\r\n  </mat-form-field>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { IStorageService } from '../interfaces/storage.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService implements IStorageService {\r\n  getItems<T>(key: string): T[] {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : [];\r\n  }\r\n\r\n  setItems<T>(key: string, items: T[]): void {\r\n    localStorage.setItem(key, JSON.stringify(items));\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}